# -*- coding: utf-8 -*-
"""DAY_34,36_assignments.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Vtf6yUH8tI_Cx192Op98ZDh5rXpZBhQR
"""

#day 34 assignment
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
import pandas as pd

# Sample input text
texts = [
    "I love machine learning",
    "Machine learning is fun",
    "Deep learning is amazing"
]

# Bag of Words Representation
bow_vectorizer = CountVectorizer()
bow_matrix = bow_vectorizer.fit_transform(texts)

# Convert BoW matrix to DataFrame for better visualization
bow_df = pd.DataFrame(bow_matrix.toarray(), columns=bow_vectorizer.get_feature_names_out())
print("Bag of Words Representation:")
print(bow_df)

# TF-IDF Representation
tfidf_vectorizer = TfidfVectorizer()
tfidf_matrix = tfidf_vectorizer.fit_transform(texts)

# Convert TF-IDF matrix to DataFrame
tfidf_df = pd.DataFrame(tfidf_matrix.toarray(), columns=tfidf_vectorizer.get_feature_names_out())
print("\nTF-IDF Representation:")
print(tfidf_df)

#day 36 assignment
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
import pandas as pd

# Sample input text and corresponding labels
texts = [
    "I love programming",
    "Python is great",
    "Machine learning is amazing",
    "I enjoy coding in Python",
    "Deep learning is fascinating"
]
labels = ["Programming", "Python", "Machine Learning", "Programming", "Machine Learning"]

# Create a pipeline with CountVectorizer and MultinomialNB
model = make_pipeline(CountVectorizer(), MultinomialNB())

# Train the model
model.fit(texts, labels)

# Predict the category of a new text
new_text = ["I love deep learning"]
predicted_category = model.predict(new_text)

print("Predicted Category:", predicted_category[0])

# Bag of Words Representation
bow_vectorizer = CountVectorizer()
bow_matrix = bow_vectorizer.fit_transform(texts)

# Convert BoW matrix to DataFrame for better visualization
bow_df = pd.DataFrame(bow_matrix.toarray(), columns=bow_vectorizer.get_feature_names_out())
print("\nBag of Words Representation:")
print(bow_df)

# TF-IDF Representation
tfidf_vectorizer = TfidfVectorizer()
tfidf_matrix = tfidf_vectorizer.fit_transform(texts)

# Convert TF-IDF matrix to DataFrame
tfidf_df = pd.DataFrame(tfidf_matrix.toarray(), columns=tfidf_vectorizer.get_feature_names_out())
print("\nTF-IDF Representation:")
print(tfidf_df)